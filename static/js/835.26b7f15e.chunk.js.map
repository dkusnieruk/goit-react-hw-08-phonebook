{"version":3,"file":"static/js/835.26b7f15e.chunk.js","mappings":"yKACA,EAAwB,wBAAxB,EAAwD,wBAAxD,EAAuF,uBAAvF,EAAuH,yB,SCShH,SAASA,IACd,IAAMC,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAAcD,EAAAA,EAAAA,QAAO,MACrBE,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,IAgCJ,OACE,+BACE,kBAAMI,UAAWC,EAAUC,SANV,SAAAC,GACnBA,EAAMC,iBA3BiB,WACvB,IAAMC,EAAcf,EAAUgB,QAAQC,MAChCC,EAAahB,EAAYc,QAAQC,MAEpBd,EAASgB,QAAO,SAAAC,GACjC,IAAMC,EAAcD,EAAQE,KAAKC,cAC3BC,EAAaT,EAAYQ,cAE/B,QAAIF,EAAYI,SAASD,EAG1B,IAEcE,OAAS,EACtBC,MAAM,qCAAD,OAAiCZ,IAEtCT,GACEsB,EAAAA,EAAAA,IAAW,CACTN,KAAMP,EACNc,MAAOX,KAGblB,EAAUgB,QAAQC,MAAQ,GAC1Bf,EAAYc,QAAQC,MAAQ,EAC7B,CAICa,EACD,EAGG,WACE,mBAAOpB,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EACXoB,IAAK/B,EACLgC,KAAK,OACLV,KAAK,OACLW,QAAQ,yHACRC,MAAM,yIACNC,YAAY,cACZC,UAAQ,QAGZ,mBAAO1B,UAAWC,EAAlB,oBAEE,kBACEoB,IAAK7B,EACLQ,UAAWC,EACXqB,KAAK,MACLV,KAAK,SACLa,YAAY,aACZF,QAAQ,yFACRC,MAAM,+FACNE,UAAQ,QAGZ,mBAAQ1B,UAAWC,EAAYqB,KAAK,SAApC,6BAMP,C","sources":["webpack:///./src/components/Contacts/contacts.module.css?1e09","components/Contacts/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"contacts_label__G7+R4\",\"input\":\"contacts_input__E45sv\",\"form\":\"contacts_form__hFncB\",\"button\":\"contacts_button__3-8cg\"};","import React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addContact,\n  fetchContacts,\n  selectContacts,\n} from '../../Redux/ContactsSlice';\nimport css from '../Contacts/contacts.module.css';\nimport { useEffect } from 'react';\n\nexport function Contacts() {\n  const inputName = useRef(null);\n  const inputNumber = useRef(null);\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleAddContact = () => {\n    const contactText = inputName.current.value;\n    const numberText = inputNumber.current.value;\n\n    const checkArray = contacts.filter(contact => {\n      const filterArray = contact.name.toLowerCase();\n      const filterName = contactText.toLowerCase();\n\n      if (filterArray.includes(filterName)) {\n        return true;\n      } else return false;\n    });\n\n    if (checkArray.length > 0) {\n      alert(`Masz już kontakt o imieniu : ${contactText}`);\n    } else\n      dispatch(\n        addContact({\n          name: contactText,\n          phone: numberText,\n        })\n      );\n    inputName.current.value = '';\n    inputNumber.current.value = '';\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    handleAddContact();\n  };\n  return (\n    <>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label className={css.label}>\n          Name\n          <input\n            className={css.input}\n            ref={inputName}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Add contact\"\n            required\n          />\n        </label>\n        <label className={css.label}>\n          Number\n          <input\n            ref={inputNumber}\n            className={css.input}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Add Number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className={css.button} type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    </>\n  );\n}\n"],"names":["Contacts","inputName","useRef","inputNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","useEffect","fetchContacts","className","css","onSubmit","event","preventDefault","contactText","current","value","numberText","filter","contact","filterArray","name","toLowerCase","filterName","includes","length","alert","addContact","phone","handleAddContact","ref","type","pattern","title","placeholder","required"],"sourceRoot":""}